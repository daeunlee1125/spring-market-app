<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.shoply.mapper.AdminProductMapper">
    <select id="countProductList" resultType="int">
        SELECT COUNT(*)
        FROM PRODUCT p
        JOIN PRO_FILE pf ON p.PROD_NO = pf.PROD_NO
        <where>
            pf.F_DIST = 1

            <if test="memLevel == 2">
                AND p.MEM_ID = #{memId}
            </if>

            <if test="searchType != null and keyword != null and keyword != ''">
                <choose>
                    <when test="searchType == 'prodName'">
                        AND p.PROD_NAME LIKE '%' || #{keyword} || '%'
                    </when>
                    <when test="searchType == 'prodNo'">
                        AND p.PROD_NO = #{keyword}
                    </when>
                    <when test="searchType == 'company'">
                        AND p.PROD_COMPANY LIKE '%' || #{keyword} || '%'
                    </when>
                </choose>
            </if>
        </where>
    </select>

    <select id="selectProductList" resultType="kr.co.shoply.dto.ProductListDTO">
        SELECT *
        FROM (
            SELECT ROWNUM AS RNUM, A.*
            FROM (
                SELECT
                    p.PROD_NO,
                    p.PROD_NAME,
                    p.PROD_COMPANY,
                    p.MEM_ID,
                    p.PROD_PRICE,
                    p.PROD_POINT,
                    p.PROD_STOCK,
                    p.PROD_HIT,
                    pf.F_NAME
                FROM PRODUCT p
                JOIN PRO_FILE pf
                ON p.PROD_NO = pf.PROD_NO
                <where>
                    pf.F_DIST = 1

                    <if test="memLevel == 2">
                        AND p.MEM_ID = #{memId}
                    </if>

                    <if test="searchType != null and keyword != null and keyword != ''">
                        <choose>
                            <when test="searchType == 'prodName'">
                                AND p.PROD_NAME LIKE '%' || #{keyword} || '%'
                            </when>
                            <when test="searchType == 'prodNo'">
                                AND p.PROD_NO = #{keyword}
                            </when>
                            <when test="searchType == 'company'">
                                AND p.PROD_COMPANY LIKE '%' || #{keyword} || '%'
                            </when>
                        </choose>
                    </if>
                </where>
                ORDER BY p.PROD_NO DESC
            ) A
            WHERE ROWNUM <![CDATA[<=]]> #{offset} + #{size}
        )
        WHERE RNUM > #{offset}
    </select>

    <!-- registerProduct에서 한번에 INSERT / Transactional -->
    <insert id="insertProduct">
        <selectKey keyProperty="prod_no" resultType="string" order="BEFORE">
            SELECT LPAD(#{cate2_no}, 2, '0') || LPAD(product_seq.NEXTVAL, 7, '0') FROM DUAL
        </selectKey>
        INSERT INTO PRODUCT (
            PROD_NO, CATE2_NO, PROD_NAME, PROD_INFO, PROD_COMPANY, MEM_ID,
            PROD_PRICE, PROD_SALE, PROD_DELIV_PRICE, PROD_POINT,
            PROD_STOCK, PROD_SOLD, PROD_HIT
        )
        VALUES (
            #{prod_no}, #{cate2_no}, #{prod_name}, #{prod_info}, #{prod_company}, #{mem_id},
            #{prod_price}, #{prod_sale}, #{prod_deliv_price}, #{prod_point},
            #{prod_stock}, #{prod_sold}, #{prod_hit}
        )
    </insert>


    <insert id="insertProductFile">
        INSERT INTO PRO_FILE (PROD_NO, F_NAME, F_RDATE, F_DIST)
                    VALUES (#{prod_no}, #{f_name}, SYSDATE, #{f_dist})

    </insert>

    <insert id="insertProductNotice">
        INSERT INTO PROD_NOTICE (PROD_NO, NOT_NAME, NOT_VAL)
                    VALUES(#{prod_no}, #{not_name}, #{not_val})
    </insert>

    <insert id="insertProductOption">
        INSERT INTO PROD_OPTION (PROD_NO, OPT_NAME, OPT_VAL)
                    VALUES(#{prod_no}, #{opt_name}, #{opt_val})
    </insert>
    <!-- registerProduct에서 한번에 INSERT / Transactional -->
</mapper>